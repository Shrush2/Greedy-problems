import java.util.* ;
import java.io.*; 
public class Solution {
    public static int minimumSum(int[] arr1, int[] arr2, int n) {
        // Write your code here.
        int mindiff  = 0;
        int sum = 0;
        Arrays.sort(arr1);
        Arrays.sort(arr2);
        for(int i = 0; i < arr1.length ;i++){
        mindiff = Math.abs(arr1[i] - arr2[i]);
        sum += mindiff;
        }

        return sum;
    }
}

You have been given two arrays/lists 'ARR1' and 'ARR2' of length 'N'. Your task is to pair each element of 'ARR1' to an element of 'ARR2' such that the sum of the absolute difference of all pairs is minimum.
Example:
If 'ARR1' = [0, 2, 1], and 'ARR2' = [8, 10, 4] then the most optimal pairing will be (0, 4) , (1, 8) and (2, 10). The sum of absolute difference will be 4 + 7 + 8 = 19.

T.C => O(n logn) +O(n logn) +O(n) => O(n log n)
S.C => O(1)
